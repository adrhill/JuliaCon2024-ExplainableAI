---
title: "What's new with Explainable AI in Julia?"
author:
  - name: Adrian Hill
    orcid: 0009-0009-5977-301X
    email: hill@tu-berlin.de
    affiliation: 
      - name: Technische UniversitÃ¤t Berlin
      - department: Machine Learning Group
date: "2024-07-11"
bibliography: library.bib
engine: julia
format:
  revealjs:
    theme: [default, custom.scss]
    footer: "[github.com/Julia-XAI](http://github.com/Julia-XAI)"
    slide-number: true
    overview: true
    code-line-numbers: false
execute:
    echo: true
    freeze: auto
---

# Introduction

## Follow along

::: {.qr-code}
![](img/qr/qrcode.png)

[github.com/adrhill/JuliaCon2024-ExplainableAI](https://github.com/adrhill/JuliaCon2024-ExplainableAI)
:::

## ExplainableAI.jl to Julia-XAI

- **JuliaCon 2022:** ExplainableAI.jl
- **JuliaCon 2024:** Julia-XAI organization

::: {.callout-note}
## What is Julia-XAI?

Ecosystem of packages providing a platform for the development of new XAI methods:

[github.com/Julia-XAI](http://github.com/Julia-XAI)
:::

::: {.callout-important}
## What kind of explanations?

Post-hoc, local input-space explanations of black-box models:
 
> "Which part of the input is responsible for the model's output?"
:::

## Example: vision models

![](img/castle.jpg){width=300px;}
```{julia}
#| echo: false
using Images
using ImageNetDataset

# Prepare data
img = load("img/castle.jpg")
tfm = CenterCropNormalize()
input = reshape(transform(tfm, "img/castle.jpg"), 224, 224, 3, :);
```

```{julia}
using Flux, Metalhead
model = VGG(19; pretrain=true).layers
testmode!(model)

prediction = model(input)
class = argmax(prediction) # class 484: castle
```

Pretrained model predicts class "castle". **But why?**

## Heatmapping: input sensitivity

```{julia}
using ExplainableAI
using VisionHeatmaps

analyzer = Gradient(model)
expl = analyze(input, analyzer)
heatmap(expl)
```

## Heatmapping: GradCAM

```{julia}
using ExplainableAI
using VisionHeatmaps

analyzer = GradCAM(model[1], model[2])
expl = analyze(input, analyzer)
heatmap_overlay(expl, img)
```

@selvaraju2017grad

## Heatmapping: LRP

```{julia}
using RelevancePropagation
using VisionHeatmaps

analyzer = LRP(model, EpsilonPlusFlat())
explanation = analyze(input, analyzer)
heatmap(explanation)
```

@bach2015pixel

## The Julia-XAI ecosystem

## VisionHeatmaps.jl

## TextHeatmaps.jl

## XAIBase.jl

## RelevancePropagation.jl

## New methods

# Appendix

## References

::: {#refs}
:::
